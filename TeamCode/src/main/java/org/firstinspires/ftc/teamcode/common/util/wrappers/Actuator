public class Actuator {
  private Map<String, HardwareDevice> a_devices = new ConcurrentHashMap<>();
  private double a_position;
  private AsymmetricalMotionProfile a_profile;
  private PIDController a_controller;
  private ElapsedTime a_timer;

  public Actuator(HardwareDevice... devices) {
    for (HardwareDevice device : devices) {
      this.devices.put(device.getName(), device);
    }
  }

  public void read() {
    for (HardwareDevice device : devices) {
      if (device instanceOf AnalogServo) {
        this.a_position = device.getPosition();
      } else if (device instanceOf DcMotor) {
        this.a_position = device.getPosition();
      }
    }
  }

  public HardwareDevice getDevice(String deviceName) {
    return this.a_devices.get(deviceName);
  }

  public List<HardwareDevice> getDevices() {
    return new ArrayList<>(a_devices.values());
  }

  public void setMotionProfile(AsymmetricalMotionProfile profile) {
    this.a_profile = profile;
  }

  public void setMotionConstraints(ProfileConstraints constraints) {
    this.a_constraints = constraints;
  }

  public void setPIDController(PIDFController controller) {
    this.a_controller = controller;
  }

  public double getPosition() {
    return position;
  }
}
